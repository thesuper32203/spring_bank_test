/*
 * Open Finance
 * OpenAPI specification for Finicity APIs.  Open Finance (formerly Open Banking) solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.31.2
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ErrorWrapper;
import org.openapitools.client.model.EventStatusUpdate;
import org.openapitools.client.model.ListAvailableWebhookSubscriptionEvents200Response;
import org.openapitools.client.model.Subscription;
import org.openapitools.client.model.SubscriptionDetail;
import org.openapitools.client.model.Subscriptions;
import org.openapitools.client.model.WebhookEvent;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for WebhookSubscriptionApi
 */
@Disabled
public class WebhookSubscriptionApiTest {

    private final WebhookSubscriptionApi api = new WebhookSubscriptionApi();

    /**
     * Enable or disable Webhook Subscription Event
     *
     * Enables or disables a specific webhook event within a subscription identified by subscription ID and webhook event ID. Update the event&#39;s status to either active or inactive.   _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void changeWebhookSubscriptionEventStatusTest() throws ApiException {
        String subscriptionId = null;
        String webhookEventId = null;
        EventStatusUpdate eventStatusUpdate = null;
        String xExternalRequestId = null;
        EventStatusUpdate response = api.changeWebhookSubscriptionEventStatus(subscriptionId, webhookEventId, eventStatusUpdate, xExternalRequestId);
        // TODO: test validations
    }

    /**
     * Enable or disable all the webhook event under a given webhook subscription
     *
     * Enables or disables all webhook subscription event for partner. Update the  status to either active or inactive. _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void changeWebhookSubscriptionStatusTest() throws ApiException {
        String subscriptionId = null;
        EventStatusUpdate eventStatusUpdate = null;
        String xExternalRequestId = null;
        EventStatusUpdate response = api.changeWebhookSubscriptionStatus(subscriptionId, eventStatusUpdate, xExternalRequestId);
        // TODO: test validations
    }

    /**
     * Create Webhook Subscription
     *
     * Creates a new webhook subscription for receiving event notifications. You can specify the URL for receiving notifications and select the events to subscribe to, including any conditions for filtering. Each partner can have multiple subscriptions, and each subscription can cover multiple events. The API supports URL overrides at the event level, ensuring that each subscription is tailored to specific events and their respective requirements.   _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createWebhookSubscriptionTest() throws ApiException {
        Subscription subscription = null;
        String xExternalRequestId = null;
        SubscriptionDetail response = api.createWebhookSubscription(subscription, xExternalRequestId);
        // TODO: test validations
    }

    /**
     * Delete Webhook Subscription
     *
     * Deletes a subscription specified by its ID. Once deleted, the subscription and its associated events will no longer be active or receive notifications   _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteWebhookSubscriptionTest() throws ApiException {
        String subscriptionId = null;
        String xExternalRequestId = null;
        api.deleteWebhookSubscription(subscriptionId, xExternalRequestId);
        // TODO: test validations
    }

    /**
     * Delete Webhook Subscription Event
     *
     * Deletes a specific webhook event from a subscription identified by subscription Id and webhook Event Id.   _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteWebhookSubscriptionEventTest() throws ApiException {
        String subscriptionId = null;
        String webhookEventId = null;
        String xExternalRequestId = null;
        api.deleteWebhookSubscriptionEvent(subscriptionId, webhookEventId, xExternalRequestId);
        // TODO: test validations
    }

    /**
     * Get Webhook Subscription Details
     *
     * Retrieves detailed information about a specific webhook subscription using the provided subscription ID. The response includes subscription details such as the events, conditions, and current status.   _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWebhookSubscriptionByIdTest() throws ApiException {
        String subscriptionId = null;
        String xExternalRequestId = null;
        SubscriptionDetail response = api.getWebhookSubscriptionById(subscriptionId, xExternalRequestId);
        // TODO: test validations
    }

    /**
     * List Available Webhook Subscription Events
     *
     * Allows partners to retrieve a list of all event subscriptions supported by the Open Finance system.  This endpoint provides information about each subscription, including the webhook URL and associated events, enabling partners to understand all available subscription options.   _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAvailableWebhookSubscriptionEventsTest() throws ApiException {
        String xExternalRequestId = null;
        ListAvailableWebhookSubscriptionEvents200Response response = api.listAvailableWebhookSubscriptionEvents(xExternalRequestId);
        // TODO: test validations
    }

    /**
     * List Webhook Subscriptions
     *
     * Retrieves a list of all webhook subscriptions. The response includes details of each subscription, such as the subscription ID, URL, events, and their conditions. This API provides an overview of all active and inactive subscriptions.   _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listWebhookSubscriptionsTest() throws ApiException {
        String xExternalRequestId = null;
        Integer offset = null;
        Integer limit = null;
        Subscriptions response = api.listWebhookSubscriptions(xExternalRequestId, offset, limit);
        // TODO: test validations
    }

    /**
     * Test Webhook Subscription Based on Subscription id
     *
     * Test all the webhook event under the given webhook subscription using subscription_id. _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void testWebhookSubscriptionTest() throws ApiException {
        String subscriptionId = null;
        String xExternalRequestId = null;
        api.testWebhookSubscription(subscriptionId, xExternalRequestId);
        // TODO: test validations
    }

    /**
     * Test Webhook Subscription Based on Subscription id &amp; Webhook event id.
     *
     * Test the webhook event under the given webhook subscription using subscription_id &amp; webhook event id. _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void testWebhookSubscriptionBasedOnEventIdTest() throws ApiException {
        String subscriptionId = null;
        String webhookEventId = null;
        String xExternalRequestId = null;
        api.testWebhookSubscriptionBasedOnEventId(subscriptionId, webhookEventId, xExternalRequestId);
        // TODO: test validations
    }

    /**
     * Update Webhook Subscription
     *
     * Updates an existing webhook subscription with the specified subscription ID. You can modify the subscription URL and the events associated with it.   _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateWebhookSubscriptionTest() throws ApiException {
        String subscriptionId = null;
        Subscription subscription = null;
        String xExternalRequestId = null;
        SubscriptionDetail response = api.updateWebhookSubscription(subscriptionId, subscription, xExternalRequestId);
        // TODO: test validations
    }

    /**
     * Update Webhook Subscription Event
     *
     * Updates a specific webhook event in a subscription. Use subscription Id and webhook Event Id to identify the event and modify its details.   _Supported regions_: ![ðŸ‡ºðŸ‡¸](https://flagcdn.com/20x15/us.png)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateWebhookSubscriptionEventTest() throws ApiException {
        String subscriptionId = null;
        String webhookEventId = null;
        WebhookEvent webhookEvent = null;
        String xExternalRequestId = null;
        WebhookEvent response = api.updateWebhookSubscriptionEvent(subscriptionId, webhookEventId, webhookEvent, xExternalRequestId);
        // TODO: test validations
    }

}
