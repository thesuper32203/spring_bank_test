/*
 * Open Finance
 * OpenAPI specification for Finicity APIs.  Open Finance (formerly Open Banking) solutions in the US are provided by Finicity, a Mastercard company.
 *
 * The version of the OpenAPI document: 1.31.2
 * Contact: apisupport@mastercard.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.GoldStandardErrorMessage;
import org.openapitools.client.model.ModelConfiguration;
import org.openapitools.client.model.PostConfigurationsRequest;
import org.openapitools.client.model.PostInstitutionsInstitutionIdLoginForms201Response;
import org.openapitools.client.model.PostInstitutionsInstitutionIdLoginFormsRequest;
import org.openapitools.client.model.PostInstitutionsInstitutionIdOauthUrls201Response;
import org.openapitools.client.model.PostInstitutionsInstitutionIdOauthUrlsRequest;
import org.openapitools.client.model.PostReconnections203ResponseInner;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ConnectComponentsApi
 */
@Disabled
public class ConnectComponentsApiTest {

    private final ConnectComponentsApi api = new ConnectComponentsApi();

    /**
     * Delete Configuration
     *
     * Removes the configuration from the database
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteConfigurationsConfigurationIdTest() throws ApiException {
        UUID configurationId = null;
        api.deleteConfigurationsConfigurationId(configurationId);
        // TODO: test validations
    }

    /**
     * Get All Configurations for Current Partner
     *
     * Get all previously saved Connect Component configurations.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getConfigurationsTest() throws ApiException {
        List<ModelConfiguration> response = api.getConfigurations();
        // TODO: test validations
    }

    /**
     * Get Configuration Details
     *
     * Returns the configuration with the specified id if the configuration exists and belongs to the partner calling this endpoint
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getConfigurationsConfigurationIdTest() throws ApiException {
        UUID configurationId = null;
        ModelConfiguration response = api.getConfigurationsConfigurationId(configurationId);
        // TODO: test validations
    }

    /**
     * Create Components Configuration
     *
     * Optional endpoint. This endpoint is use to generate a configuration  object, which an then be passed in during the login flow. If used, the ID provided will need to be passed in the Create Login  Form or Create OAuth URL.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postConfigurationsTest() throws ApiException {
        PostConfigurationsRequest postConfigurationsRequest = null;
        ModelConfiguration response = api.postConfigurations(postConfigurationsRequest);
        // TODO: test validations
    }

    /**
     * Create Login Form
     *
     * Generate a new login form for a given institution, customer, and language.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postInstitutionsInstitutionIdLoginFormsTest() throws ApiException {
        Integer institutionId = null;
        PostInstitutionsInstitutionIdLoginFormsRequest postInstitutionsInstitutionIdLoginFormsRequest = null;
        PostInstitutionsInstitutionIdLoginForms201Response response = api.postInstitutionsInstitutionIdLoginForms(institutionId, postInstitutionsInstitutionIdLoginFormsRequest);
        // TODO: test validations
    }

    /**
     * Create OAuth URL
     *
     * Generates a new OAuth URL that can be used to connect an end-user into their direct-connection institution. The &#x60;redirectURI&#x60; will be called when the oauth session has completed. An optional configuration object can be applied by including a valid &#x60;configurationId&#x60; in the request body.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postInstitutionsInstitutionIdOauthUrlsTest() throws ApiException {
        Integer institutionId = null;
        PostInstitutionsInstitutionIdOauthUrlsRequest postInstitutionsInstitutionIdOauthUrlsRequest = null;
        PostInstitutionsInstitutionIdOauthUrls201Response response = api.postInstitutionsInstitutionIdOauthUrls(institutionId, postInstitutionsInstitutionIdOauthUrlsRequest);
        // TODO: test validations
    }

    /**
     * Initiate Reconnection
     *
     * Use the Connect Fix API when the following conditions occur:   * The connection to the user&#39;s financial institution is lost.   * The user&#39;s credentials were updated (for any number of reasons).   * The user&#39;s MFA challenge has expired.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void postReconnectionsTest() throws ApiException {
        String customerId = null;
        Long institutionLoginId = null;
        Object body = null;
        PostInstitutionsInstitutionIdLoginForms201Response response = api.postReconnections(customerId, institutionLoginId, body);
        // TODO: test validations
    }

}
